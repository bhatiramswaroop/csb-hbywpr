{"version":3,"sources":["actions/Counter.js","App.js","reducers/counterReducer.js","actions/ActionType.js","reducers/index.js","index.js"],"names":["connect","state","count","counterReducer","props","React","createElement","className","App","Fragment","Counter","arguments","length","undefined","action","type","payload","counterApp","combineReducers","store","createStore","reducer","ReactDOM","render","Provider","document","getElementById"],"mappings":"mMAiBeA,kBALf,SAAyBC,GACvB,MAAO,CACLC,MAAOD,EAAME,iBAGFH,CAfC,SAACI,GACf,OACEC,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAKF,EAAMF,WCOJM,EATH,WACV,OACEH,IAAAC,cAAAD,IAAAI,SAAA,KACEJ,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAACI,EAAO,eCMCP,EAZQ,WAAuB,IAAtBF,EAAKU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEvC,OAAQC,EAAOC,MACb,ICLuB,cDMrB,OAAmBd,EAAQa,EAAOE,QACpC,ICN0B,iBDOxB,OAAmBf,EAAQa,EAAOE,QACpC,QACE,OAAOf,IEHEgB,EAJIC,YAAgB,CACjCf,mBCIIgB,EAAQC,YAAYC,GAE1BC,IAASC,OACPlB,IAAAC,cAACkB,IAAQ,CAACL,MAAOA,GACfd,IAAAC,cAACE,EAAG,OAENiB,SAASC,eAAe","file":"static/js/main.993b4f00.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nconst Counter = (props) => {\r\n  return (\r\n    <div className=\"cotainer\">\r\n      <div className=\"notification\">\r\n        <h1>{props.count}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    count: state.counterReducer\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Counter);\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport Counter from \"./actions/Counter\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h1>Counter</h1>\r\n      <Counter></Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import * as actionType from \"../actions/ActionType\";\r\n\r\nconst counterReducer = (state = 0, action) => {\r\n  let newState;\r\n  switch (action.type) {\r\n    case actionType.ADD_COUNTER:\r\n      return (newState = state + action.payload);\r\n    case actionType.REMOVE_COUNTER:\r\n      return (newState = state - action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default counterReducer;\r\n","export const ADD_COUNTER = \"ADD_COUNTER\";\r\nexport const REMOVE_COUNTER = \"REMOVE_COUNTER\";\r\n","import { combineReducers } from \"redux\";\r\nimport counterReducer from \"./counterReducer\";\r\n\r\nconst counterApp = combineReducers({\r\n  counterReducer\r\n});\r\n\r\nexport default counterApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}